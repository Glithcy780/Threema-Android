// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: csp-e2e.proto

package ch.threema.protobuf.csp.e2e;

/**
 * <pre>
 * Request joining a group.
 * This message is sent to the administrator of a group. The required
 * information is provided by a `GroupInvite` URL payload.
 * When receiving this message:
 * 1. Look up the corresponding group invitation by the token.
 * 2. If the group invitation could not be found, discard the message and abort
 *    these steps.
 * 3. If the sender is already part of the group, send an accept response and
 *    then respond as if the sender had sent a `group-sync-request` (i.e. send
 *    a `group-setup`, `group-name`, etc.). Finally, abort these steps.
 * 4. If the group name does not match the name in the originally sent group
 *    invitation, discard the message and abort these steps.
 * 5. If the group invitation has expired, send the respective response and
 *    abort these steps.
 * 6. If the group invitation requires the admin to accept the request, show
 *    this information in the user interface and pause these steps until the
 *    admin manually confirmed of rejected the request. Note that the date of
 *    the decision is allowed to extend beyond the expiration date of the
 *    group invitation. Continue with the following sub-steps once the admin
 *    made a decision on the request:
 *     1. If the admin manually rejected the request, send the respective
 *        response and abort these steps.
 * 7. If the group is full, send the respective response and abort these steps.
 * 8. Send an accept response.
 * 9. Add the sender of the group invitation request to the group and follow
 *    the group protocol from there.
 * </pre>
 *
 * Protobuf type {@code csp_e2e.GroupJoinRequest}
 */
public  final class GroupJoinRequest extends
    com.google.protobuf.GeneratedMessageLite<
        GroupJoinRequest, GroupJoinRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:csp_e2e.GroupJoinRequest)
    GroupJoinRequestOrBuilder {
  private GroupJoinRequest() {
    token_ = com.google.protobuf.ByteString.EMPTY;
    groupName_ = "";
    message_ = "";
  }
  public static final int TOKEN_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString token_;
  /**
   * <pre>
   * The group invite token, 16 bytes
   * </pre>
   *
   * <code>bytes token = 1;</code>
   * @return The token.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getToken() {
    return token_;
  }
  /**
   * <pre>
   * The group invite token, 16 bytes
   * </pre>
   *
   * <code>bytes token = 1;</code>
   * @param value The token to set.
   */
  private void setToken(com.google.protobuf.ByteString value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    token_ = value;
  }
  /**
   * <pre>
   * The group invite token, 16 bytes
   * </pre>
   *
   * <code>bytes token = 1;</code>
   */
  private void clearToken() {
    
    token_ = getDefaultInstance().getToken();
  }

  public static final int GROUP_NAME_FIELD_NUMBER = 2;
  private java.lang.String groupName_;
  /**
   * <pre>
   * The group name from the group invite URL
   * </pre>
   *
   * <code>string group_name = 2;</code>
   * @return The groupName.
   */
  @java.lang.Override
  public java.lang.String getGroupName() {
    return groupName_;
  }
  /**
   * <pre>
   * The group name from the group invite URL
   * </pre>
   *
   * <code>string group_name = 2;</code>
   * @return The bytes for groupName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(groupName_);
  }
  /**
   * <pre>
   * The group name from the group invite URL
   * </pre>
   *
   * <code>string group_name = 2;</code>
   * @param value The groupName to set.
   */
  private void setGroupName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    groupName_ = value;
  }
  /**
   * <pre>
   * The group name from the group invite URL
   * </pre>
   *
   * <code>string group_name = 2;</code>
   */
  private void clearGroupName() {
    
    groupName_ = getDefaultInstance().getGroupName();
  }
  /**
   * <pre>
   * The group name from the group invite URL
   * </pre>
   *
   * <code>string group_name = 2;</code>
   * @param value The bytes for groupName to set.
   */
  private void setGroupNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    groupName_ = value.toStringUtf8();
    
  }

  public static final int MESSAGE_FIELD_NUMBER = 3;
  private java.lang.String message_;
  /**
   * <pre>
   * A message for the group administrator, e.g. for identification purposes
   * The message helps the administrator to decide whether or not to accept a
   * join request.
   * Should be requested by the user interface for invitations that require
   * manual confirmation by the administrator. Should not be requested in case
   * the invitation will be automatically accepted.
   * </pre>
   *
   * <code>string message = 3;</code>
   * @return The message.
   */
  @java.lang.Override
  public java.lang.String getMessage() {
    return message_;
  }
  /**
   * <pre>
   * A message for the group administrator, e.g. for identification purposes
   * The message helps the administrator to decide whether or not to accept a
   * join request.
   * Should be requested by the user interface for invitations that require
   * manual confirmation by the administrator. Should not be requested in case
   * the invitation will be automatically accepted.
   * </pre>
   *
   * <code>string message = 3;</code>
   * @return The bytes for message.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMessageBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(message_);
  }
  /**
   * <pre>
   * A message for the group administrator, e.g. for identification purposes
   * The message helps the administrator to decide whether or not to accept a
   * join request.
   * Should be requested by the user interface for invitations that require
   * manual confirmation by the administrator. Should not be requested in case
   * the invitation will be automatically accepted.
   * </pre>
   *
   * <code>string message = 3;</code>
   * @param value The message to set.
   */
  private void setMessage(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    message_ = value;
  }
  /**
   * <pre>
   * A message for the group administrator, e.g. for identification purposes
   * The message helps the administrator to decide whether or not to accept a
   * join request.
   * Should be requested by the user interface for invitations that require
   * manual confirmation by the administrator. Should not be requested in case
   * the invitation will be automatically accepted.
   * </pre>
   *
   * <code>string message = 3;</code>
   */
  private void clearMessage() {
    
    message_ = getDefaultInstance().getMessage();
  }
  /**
   * <pre>
   * A message for the group administrator, e.g. for identification purposes
   * The message helps the administrator to decide whether or not to accept a
   * join request.
   * Should be requested by the user interface for invitations that require
   * manual confirmation by the administrator. Should not be requested in case
   * the invitation will be automatically accepted.
   * </pre>
   *
   * <code>string message = 3;</code>
   * @param value The bytes for message to set.
   */
  private void setMessageBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    message_ = value.toStringUtf8();
    
  }

  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(ch.threema.protobuf.csp.e2e.GroupJoinRequest prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Request joining a group.
   * This message is sent to the administrator of a group. The required
   * information is provided by a `GroupInvite` URL payload.
   * When receiving this message:
   * 1. Look up the corresponding group invitation by the token.
   * 2. If the group invitation could not be found, discard the message and abort
   *    these steps.
   * 3. If the sender is already part of the group, send an accept response and
   *    then respond as if the sender had sent a `group-sync-request` (i.e. send
   *    a `group-setup`, `group-name`, etc.). Finally, abort these steps.
   * 4. If the group name does not match the name in the originally sent group
   *    invitation, discard the message and abort these steps.
   * 5. If the group invitation has expired, send the respective response and
   *    abort these steps.
   * 6. If the group invitation requires the admin to accept the request, show
   *    this information in the user interface and pause these steps until the
   *    admin manually confirmed of rejected the request. Note that the date of
   *    the decision is allowed to extend beyond the expiration date of the
   *    group invitation. Continue with the following sub-steps once the admin
   *    made a decision on the request:
   *     1. If the admin manually rejected the request, send the respective
   *        response and abort these steps.
   * 7. If the group is full, send the respective response and abort these steps.
   * 8. Send an accept response.
   * 9. Add the sender of the group invitation request to the group and follow
   *    the group protocol from there.
   * </pre>
   *
   * Protobuf type {@code csp_e2e.GroupJoinRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        ch.threema.protobuf.csp.e2e.GroupJoinRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:csp_e2e.GroupJoinRequest)
      ch.threema.protobuf.csp.e2e.GroupJoinRequestOrBuilder {
    // Construct using ch.threema.protobuf.csp.e2e.GroupJoinRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The group invite token, 16 bytes
     * </pre>
     *
     * <code>bytes token = 1;</code>
     * @return The token.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getToken() {
      return instance.getToken();
    }
    /**
     * <pre>
     * The group invite token, 16 bytes
     * </pre>
     *
     * <code>bytes token = 1;</code>
     * @param value The token to set.
     * @return This builder for chaining.
     */
    public Builder setToken(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setToken(value);
      return this;
    }
    /**
     * <pre>
     * The group invite token, 16 bytes
     * </pre>
     *
     * <code>bytes token = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearToken() {
      copyOnWrite();
      instance.clearToken();
      return this;
    }

    /**
     * <pre>
     * The group name from the group invite URL
     * </pre>
     *
     * <code>string group_name = 2;</code>
     * @return The groupName.
     */
    @java.lang.Override
    public java.lang.String getGroupName() {
      return instance.getGroupName();
    }
    /**
     * <pre>
     * The group name from the group invite URL
     * </pre>
     *
     * <code>string group_name = 2;</code>
     * @return The bytes for groupName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGroupNameBytes() {
      return instance.getGroupNameBytes();
    }
    /**
     * <pre>
     * The group name from the group invite URL
     * </pre>
     *
     * <code>string group_name = 2;</code>
     * @param value The groupName to set.
     * @return This builder for chaining.
     */
    public Builder setGroupName(
        java.lang.String value) {
      copyOnWrite();
      instance.setGroupName(value);
      return this;
    }
    /**
     * <pre>
     * The group name from the group invite URL
     * </pre>
     *
     * <code>string group_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearGroupName() {
      copyOnWrite();
      instance.clearGroupName();
      return this;
    }
    /**
     * <pre>
     * The group name from the group invite URL
     * </pre>
     *
     * <code>string group_name = 2;</code>
     * @param value The bytes for groupName to set.
     * @return This builder for chaining.
     */
    public Builder setGroupNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setGroupNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * A message for the group administrator, e.g. for identification purposes
     * The message helps the administrator to decide whether or not to accept a
     * join request.
     * Should be requested by the user interface for invitations that require
     * manual confirmation by the administrator. Should not be requested in case
     * the invitation will be automatically accepted.
     * </pre>
     *
     * <code>string message = 3;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      return instance.getMessage();
    }
    /**
     * <pre>
     * A message for the group administrator, e.g. for identification purposes
     * The message helps the administrator to decide whether or not to accept a
     * join request.
     * Should be requested by the user interface for invitations that require
     * manual confirmation by the administrator. Should not be requested in case
     * the invitation will be automatically accepted.
     * </pre>
     *
     * <code>string message = 3;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      return instance.getMessageBytes();
    }
    /**
     * <pre>
     * A message for the group administrator, e.g. for identification purposes
     * The message helps the administrator to decide whether or not to accept a
     * join request.
     * Should be requested by the user interface for invitations that require
     * manual confirmation by the administrator. Should not be requested in case
     * the invitation will be automatically accepted.
     * </pre>
     *
     * <code>string message = 3;</code>
     * @param value The message to set.
     * @return This builder for chaining.
     */
    public Builder setMessage(
        java.lang.String value) {
      copyOnWrite();
      instance.setMessage(value);
      return this;
    }
    /**
     * <pre>
     * A message for the group administrator, e.g. for identification purposes
     * The message helps the administrator to decide whether or not to accept a
     * join request.
     * Should be requested by the user interface for invitations that require
     * manual confirmation by the administrator. Should not be requested in case
     * the invitation will be automatically accepted.
     * </pre>
     *
     * <code>string message = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMessage() {
      copyOnWrite();
      instance.clearMessage();
      return this;
    }
    /**
     * <pre>
     * A message for the group administrator, e.g. for identification purposes
     * The message helps the administrator to decide whether or not to accept a
     * join request.
     * Should be requested by the user interface for invitations that require
     * manual confirmation by the administrator. Should not be requested in case
     * the invitation will be automatically accepted.
     * </pre>
     *
     * <code>string message = 3;</code>
     * @param value The bytes for message to set.
     * @return This builder for chaining.
     */
    public Builder setMessageBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setMessageBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:csp_e2e.GroupJoinRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new ch.threema.protobuf.csp.e2e.GroupJoinRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "token_",
            "groupName_",
            "message_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\n\u0002\u0208" +
              "\u0003\u0208";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<ch.threema.protobuf.csp.e2e.GroupJoinRequest> parser = PARSER;
        if (parser == null) {
          synchronized (ch.threema.protobuf.csp.e2e.GroupJoinRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<ch.threema.protobuf.csp.e2e.GroupJoinRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:csp_e2e.GroupJoinRequest)
  private static final ch.threema.protobuf.csp.e2e.GroupJoinRequest DEFAULT_INSTANCE;
  static {
    GroupJoinRequest defaultInstance = new GroupJoinRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      GroupJoinRequest.class, defaultInstance);
  }

  public static ch.threema.protobuf.csp.e2e.GroupJoinRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<GroupJoinRequest> PARSER;

  public static com.google.protobuf.Parser<GroupJoinRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

