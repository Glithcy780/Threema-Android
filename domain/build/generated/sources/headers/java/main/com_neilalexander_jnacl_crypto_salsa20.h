/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_neilalexander_jnacl_crypto_salsa20 */

#ifndef _Included_com_neilalexander_jnacl_crypto_salsa20
#define _Included_com_neilalexander_jnacl_crypto_salsa20
#ifdef __cplusplus
extern "C" {
#endif
#undef com_neilalexander_jnacl_crypto_salsa20_ROUNDS
#define com_neilalexander_jnacl_crypto_salsa20_ROUNDS 20L
/*
 * Class:     com_neilalexander_jnacl_crypto_salsa20
 * Method:    crypto_stream_native
 * Signature: ([BI[BI[B)I
 */
JNIEXPORT jint JNICALL Java_com_neilalexander_jnacl_crypto_salsa20_crypto_1stream_1native
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jint, jbyteArray);

/*
 * Class:     com_neilalexander_jnacl_crypto_salsa20
 * Method:    crypto_stream_xor_native
 * Signature: ([B[BI[BI[B)I
 */
JNIEXPORT jint JNICALL Java_com_neilalexander_jnacl_crypto_salsa20_crypto_1stream_1xor_1native
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jbyteArray, jint, jbyteArray);

/*
 * Class:     com_neilalexander_jnacl_crypto_salsa20
 * Method:    crypto_stream_xor_skip32_native
 * Signature: ([B[BI[BII[BI[B)I
 */
JNIEXPORT jint JNICALL Java_com_neilalexander_jnacl_crypto_salsa20_crypto_1stream_1xor_1skip32_1native
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jint, jbyteArray, jint, jint, jbyteArray, jint, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
